#summary This page explains how to build the application.
#labels Phase-Implementation

= Introduction =
The application has two distinct parts : 
 * The pjsip dynamic library part that produce a .so (to be more precise a .so by android target).
 * The java application that produce a .apk (and can be installed on your android device).

Due to the fact the dynamic library has to be recompiled for each android target (the ndk doesn't support audio library yet), by default the application apk will download the .so from the csipsimple website.
Although, if you want to make your own builds, there is a simple way to use your own .so builds. (See the *Build the android application* section for more details).

*Important : * If you are a java developer and you are not interested in building the sip stack, you can directly go to the *Build the android application* section.

<wiki:toc max_depth="1" />

= System and Software Requirements =
I assume that you have a linux system with svn and all android ndk requirements.


Create a new directory for the project.

= Build the pjsip library for android =

I have not committed into the svn the compiler, linker etc for android. It doesn't come any more from the official Google NDK but from an alternate NDK that allow us to build ZRTP lib (and in the future any third party cpp lib). So you have to get the Crystax NDK  
(For reference [http://www.crystax.net/android/ndk-r4.php crystax NDK])

 * First of all get the ndk and unzip
{{{
wget http://www.crystax.net/data/android-ndk-r4-linux-x86-crystax-4.tar.bz2
tar -xvf android-ndk-r4-linux-x86-crystax-4.tar.bz2
rm android-ndk-r4-linux-x86-crystax-4.tar.bz2
}}}

 * Then checkout the pjsip part of the project :
{{{
svn checkout http://csipsimple.googlecode.com/svn/trunk/pjsip_android pjsip_android
}}}

 * Now we have to add the ndk toolchains into the pjsip_android project ndk.
{{{
cp -r android-ndk-r4-crystax/build/prebuilt pjsip_android/build/
}}}
_ Note : You can now delete the android-ndk-r4-crystax folder _


 * Go into the pjsip_android directory:
{{{
cd pjsip_android
}}}

 * Launch a make (but it will generate only one target lib)
{{{
make APP=pjsip
}}}

Congratulation you've just build the dynamic library.
You can find your build under 

{{{
../CSipSimple/libs/armeabi & armeabi-v7a
}}}


= Build the android application =
From the android sdk point of view, the application is a standard android application.

So you can use eclipse.
Checkout the csipsimple directory (under trunk) from the source. (You can use [http://subclipse.tigris.org/ Subclipse] to checkout directly into Eclipse).

 * If you have build the pjsip library, copy the .so generated by the build in the directory : `libs/armeabi/libpjsipjni.so` of the android project.
 * Else the library will be automatically downloaded from internet at first run (and put into the files/ directory of the package on the device).

The project has to be imported as an android project (with sdk 2.2).<br/>
The project is compatible with android 1.5 but different layout support is available only after 1.6 and some features of manifest file after 2.2. 

Then you can launch the project using run (and choose your remote device or a virtual device _(emulator)_).
If you experiments problems at first run use _Project > Clean ..._